
@model Tuple < IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable < SelectListItem>>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>POS</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

</head>
<body>



    <div class="navbar navbar-inverse navbar-fixed-top p-0">
        <div class="container-fluid text-white py-2 px-5 m-0" style="background-color: rgba(87, 27, 39, 1); ">
            <h3 class="col">Point of Sale System</h3>

            <h2 id="dateTime" class="text-center col-5">
                <span id="date">@DateTime.Now.ToString("MMMM, dd yyyy")</span>
                <span id="time" style="margin-left: 20px;">@DateTime.Now.ToString("HH:mm:ss tt")</span>
            </h2>
            <h3 class="col text-end ">  Paultan <i class="bi bi-person-circle" style="color:white;"></i></h3>
        </div>
    </div>



    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateDateTime() {
            const dateElement = document.getElementById("date");
            const timeElement = document.getElementById("time");

            const currentTime = new Date();
            dateElement.textContent = currentTime.toLocaleDateString(undefined, {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            timeElement.textContent = currentTime.toLocaleTimeString();
        }

        updateDateTime();

        setInterval(updateDateTime, 1000);


    </script>


    <script src="~/Scripts/jquery-3.7.1.min.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            // Event handlers and initializations
            $('#Product').val(0).change(function () {
                var productId = $(this).val();
                GetUnitPrice(productId);
            });

            $('#Discount').val(0).change(function () {
                var discountId = $(this).val();
                GetDiscount(discountId);
            });

            $("input[type=text]").change(CalculateSubTotal);
            $("#btnAddtoOrder").click(AddItemtoList);
            $("#btnCancelOrder").click(ResetItem);
            $("#ChangeConfirm").click(function () {
                CalculateChange();
            });
        });

        function FinalPayment() {
            var objSalesTransaction = {};
            var ListofOrderDetailViewModel = new Array();
            //SalesTransactionDetail
            objSalesTransaction.CashierUserID = 1;
            objSalesTransaction.TotalAmount = $("#FinalTotalBill").val();
            objSalesTransaction.ReceiptInfo = "";

            $("#tblOrder").find("tr:gt(0)").each(function () {
                var SalesTransactionDetail = {};
                SalesTransactionDetail.ProductID = $(this).find("td:eq(0)").text();
                SalesTransactionDetail.QuantitySold = $(this).find("td:eq(3)").text();
                SalesTransactionDetail.PricePerUnit = $(this).find("td:eq(2)").text();
                SalesTransactionDetail.Subtotal = $(this).find("td:eq(5)").text();
                SalesTransactionDetail.DiscountID = $(this).find("td:eq(4)").text();
                ListofOrderDetailViewModel.push(SalesTransactionDetail);
            });

            objSalesTransaction.ListofOrderDetailViewModel = ListofOrderDetailViewModel;

            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(objSalesTransaction),
                url: '/POS/Index',
                success: function (data) {
                    alert(data)
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error: " + status, error);
                    alert("There is some problem to adding the data. Check the console for details.");
                }

            });
        }





        function RemoveItem(itemID) {
            $(itemID).closest('tr').remove();
            FinalOrderTotal();
        }

        function AddItemtoList() {
            var tblItemList = $("#tblOrder");
            var price = parseFloat($("#unitprice").val());
            var quantity = parseFloat($("#txtQuantity").val());
            var discount = parseFloat($("#txtDiscount").val());
            var productId = $("#Product").val();
            var productName = $("#Product option:selected").text();

            var total = (price * quantity) - discount;

            var itemlist = `<tr>
        <td hidden>${productId}</td>
        <td>${productName}</td>
        <td>${price.toFixed(2)}</td>
        <td>${quantity.toFixed()}</td>
        <td>${discount.toFixed()}</td>
        <td>${total.toFixed(2)}</td>
        <td><input type='button' value='Remove' name='remove' class='btn btn-danger' onclick='RemoveItem(this)' /></td>
    </tr>`;

            tblItemList.append(itemlist);
            FinalOrderTotal();
            ResetItem();
        }

        function FinalOrderTotal() {
            var finalSubTotal = 0.00;
            $("#tblOrder").find("tr:gt(0)").each(function () {
                finalSubTotal += parseFloat($(this).find("td:eq(5)").text());
            });

            $("#FinalSubTotal").val(finalSubTotal.toFixed(2));

            var vat = 0.12 * finalSubTotal;
            var finalTotalVatIncluded = finalSubTotal + vat;

            $("#vat").val(vat.toFixed(2));
            $("#FinalTotalBill").val(finalTotalVatIncluded.toFixed(2));
        }

        function CalculateChange() {
            var finalTotal = 0.00;
            $("#tblOrder").find("tr:gt(0)").each(function () {
                finalTotal += parseFloat($(this).find("td:eq(5)").text());
            });

            var vat = 0.12 * finalTotal;
            var finalTotalVatIncluded = finalTotal + vat;
            var customerMoney = parseFloat($("#CustomerMoney").val());
            var change = customerMoney - finalTotalVatIncluded;

            $("#CustomerChange").val(change.toFixed(2));
        }


        function PrintReceipt() {
            // Get the values needed for the receipt
            var finalSubTotal = $("#FinalSubTotal").val();
            var vat = $("#vat").val();
            var finalTotalBill = $("#FinalTotalBill").val();
            var customerChange = $("#CustomerChange").val();

            // Construct the receipt content with table items
            var receiptContent = "Receipt\n";
            receiptContent += "-------------------------\n";

            // Iterate through table rows
            $("#tblOrder").find("tr:gt(0)").each(function () {
                var itemName = $(this).find("td:eq(1)").text();
                var itemQuantity = $(this).find("td:eq(3)").text();
                var itemPrice = $(this).find("td:eq(2)").text();
                receiptContent += itemName + " x" + itemQuantity + ": ₱" + itemPrice + "\n";
            });

            receiptContent += "-------------------------\n";
            receiptContent += "Subtotal: ₱" + finalSubTotal + "\n";
            receiptContent += "VAT: ₱" + vat + "\n";
            receiptContent += "Total: ₱" + finalTotalBill + "\n";
            receiptContent += "-------------------------\n";
            receiptContent += "Customer Change: ₱" + customerChange + "\n";
            receiptContent += "-------------------------\n";

            // Open a new window with the receipt content
            var printWindow = window.open('', '_blank');
            printWindow.document.write('<html><head><title>Receipt</title></head><body><pre>' + receiptContent + '</pre></body></html>');

            // Trigger the print functionality
            printWindow.print();

            $("#FinalTotalBill, #vat, #FinalSubTotal, #CustomerChange, #CustomerMoney").val("");
            $("#tblOrder tbody").empty();
            ResetItem();

        }




        function ResetItem() {
            $("#unitprice").val('');
            $("#txtQuantity").val('');
            $("#txtDiscount").val('0');
            $("#Product").val(0);
            $('#Discount').val(0);
            $("#subtotal").val('');
        }

        function CalculateSubTotal() {
            var price = $("#unitprice").val();
            var quantity = $("#txtQuantity").val();
            var discountPercentage = $("#txtDiscount").val();

            // Convert discountPercentage to a decimal value
            var discountDecimal = parseFloat(discountPercentage) / 100;

            // Calculate the discount amount
            var discountAmount = price * quantity * discountDecimal;

            // Calculate the total after applying the discount
            var total = (price * quantity) - discountAmount;

            // Set the subtotal value
            $("#subtotal").val(parseFloat(total).toFixed(2));
            $("#txtDiscount").val(parseFloat(discountAmount).toFixed(2));
        }


        function GetUnitPrice(ProductID) {
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: { ProductID: ProductID },
                url: '/POS/getItemUnitPrice',
                success: function (data) {
                    $("#unitprice").val(parseFloat(data).toFixed(2));
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error: " + status, error);
                    alert("There is some problem getting the Unit Price. Check the console for details.");
                }

            });
        }


        function GetDiscount(DiscountId) {
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: { DiscountId: DiscountId },
                url: '/POS/getDiscountvalue',
                success: function (data) {
                    $("#txtDiscount").val(parseFloat(data).toFixed());
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error: " + status, error);
                    alert("There is some problem getting the Discount Amount. Check the console for details.");
                }

            });
        }
    </script>





    <div class="container-fluid bg-body body-content min-vh-100 pt-5" style="margin-top:-62.5px; background-color: #ccc">

        <main class="container-fluid pt-4 row">

            <div class="col">

                <div style="height:80%;">
                    <table id="tblOrder" style="width:100%;">
                        <thead>
                            <tr>
                                <th hidden>Product ID</th>
                                <th>Product Code</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Discount Amount</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Table rows will be added dynamically here -->
                        </tbody>
                    </table>

                </div>
            </div>



            <div class="col-4 ">
                <div class="form-group border border-1 bg-body-secondary border-black p-2">
                    Search Product:
                    @Html.DropDownList("Product", new SelectList(Model.Item1, "Value", "Text"),
                                new { @class = "form-control" })

                    Price:
                    <input type="text" readonly="readonly" name="productprice" value="0.00" id="unitprice" class="form-control" />

                    <div class="d-flex gap-2 mt-1">
                        Discount:
                        @Html.DropDownList("Discount", new SelectList(Model.Item2, "Value", "Text"),
                                    new { @class = "form-control" })
                        Discount Amount:
                        <input type="text" readonly="readonly" name="Discount" value="0" id="txtDiscount" class="form-control" />
                    </div>
                    Quantity:
                    <input type="text" name="Quantity" value="" id="txtQuantity" class="form-control"  />


                    Subtotal:
                    <input type="text" name="subtotal" value="0.00" id="subtotal" class="form-control" readonly="readonly"/>



                    <div class="d-flex justify-content-center gap-1">
                        <input type="button" class="btn btn-primary" id="btnAddtoOrder" value="Add to order" />
                        <input type="button" class="btn btn-danger" id="btnCancelOrder" value="Cancel" />
                    </div>
                </div>



                <div class="form-group border border-1 bg-body-secondary border-black p-2 my-3">
                    Sub Total:
                    <input type="text" name="FinalSubTotal" id="FinalSubTotal" value="0.00" class="form-control" readonly="readonly" />
                    Vat:
                    <input type="text" name="vat" id="vat" value="0.00" class="form-control" readonly="readonly" />


                    <h5>Total Bill:  </h5>
                    <input type="text" name="FinalTotalBill" id="FinalTotalBill" value="0.00" class="form-control" readonly="readonly" />
                </div>


                <div class="form-group border border-1 bg-body-secondary border-black p-2 ">
                    <h5>Amount tendered:</h5>
                    <div class="d-flex gap-2">
                        <input type="text" name="CustomerMoney" id="CustomerMoney" value="" class="form-control" />
                        <input type="button" class="btn btn-warning float-end" name="ChangeConfirm" id="ChangeConfirm" value="Confirm" />
                    </div>
                    <div class="d-flex m-2 gap-2">
                        <h4>Change:  </h4>
                        <input type="text" name="CustomerChange" id="CustomerChange" value="0.00" class="form-control" readonly="readonly" style="text-align: right;" />
                    </div>

                    <div class="text-center mt-1">
                        <input type="button" class="btn btn-success" name="name" value="Print Receipt" onclick="PrintReceipt()" />
                        <input type="button" class="btn btn-success" name="name" value="Finalpayment" onclick="FinalPayment()" />
                    </div>

                </div>
            </div>
        </main>
    </div>





    <input type="button" name="name" value="Logout" class="btn btn-dark" style="position: relative; bottom:0; left:0;" />


    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>






</body>
</html>

